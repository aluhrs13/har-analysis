<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta
      name="viewport"
      content="width=device-width, initial-scale=1.0" />
    <title>HAR Analysis: {{ request.url }}</title>
    <style>
      body {
        font-family: Arial, sans-serif;
        line-height: 1.6;
        margin: 0;
        padding: 20px;
        color: #333;
      }
      h1,
      h2,
      h3 {
        color: #0066cc;
      }
      table {
        border-collapse: collapse;
        width: 100%;
        margin-bottom: 20px;
      }
      th,
      td {
        border: 1px solid #ddd;
        padding: 8px;
        text-align: left;
      }
      th {
        background-color: #f2f2f2;
        font-weight: bold;
      }
      tr:nth-child(even) {
        background-color: #f9f9f9;
      }
      .gallery {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));
        grid-gap: 15px;
        margin: 20px 0;
      }
      .gallery-item {
        border: 1px solid #ddd;
        padding: 10px;
        border-radius: 4px;
      }
      .gallery-item img {
        max-width: 100%;
        height: auto;
      }
      .image-caption {
        margin-top: 8px;
        font-size: 0.9em;
        color: #666;
        word-break: break-all;
      }
    pre {
      background-color: #f5f5f5;
      padding: 10px;
      border-radius: 4px;
      overflow-x: auto;
      white-space: pre-wrap;
      word-wrap: break-word;
    }
      .section {
        margin-bottom: 30px;
      }
      #monaco-editor-container {
        height: 75vh;
        border: 1px solid #ddd;
        margin-bottom: 20px;
      }
    </style>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/monaco-editor/0.39.0/min/vs/loader.js"></script>

  </head>
  <body>
    <div>
        <a href="/">Back to Index</a>
      </div>
    <h1>{{ request.url }}</h1>

    <div class="section">
      <h2>Request Details</h2>
      <table>
        <tr>
          <th>Property</th>
          <th>Value</th>
        </tr>
        <tr>
          <td>URL</td>
          <td>
            <a href="{{ request.url }}">{{ request.url }}</a>
          </td>
        </tr>
        <tr>
          <td>MIME Type</td>
          <td>{{ request.mimeType }}</td>
        </tr>
        <tr>
          <td>Size</td>
          <td>{{ (request.size / 1024) | default(0) | round(2) }} KB</td>
        </tr>
        <tr>
          <td>HAR Included Response</td>
          <td>{{ request.hasResponse }}</td>
        </tr>

        {% if request.cpuTimes %}
        <tr>
          <td>CPU Times</td>
          <td>
            <table>
              <tr>
                <th>Type</th>
                <th>Value</th>
              </tr>
              {% for type, value in request.cpuTimes %}
              <tr>
                <td>{{ type }}</td>
                <td>{{ value }}</td>
              </tr>
              {% endfor %}
            </table>
          </td>
        </tr>
        {% endif %} {% if request.jsAnalysis %}
        <tr>
          <td>Discovered Images</td>
          <td>{{ request.jsAnalysis.imagesCount }}</td>
        </tr>
        <tr>
          <td>Other Strings</td>
          <td>{{ request.jsAnalysis.otherLiteralsLength }}</td>
        </tr>
        {% endif %}
      </table>
    </div>

    {% if request.hasResponse %}
    <div class="section">
      <h2>Response Content</h2>

      <div id="monaco-editor-container"></div>
      
      <script>
        require.config({ paths: { 'vs': 'https://cdnjs.cloudflare.com/ajax/libs/monaco-editor/0.39.0/min/vs' }});
        require(['vs/editor/editor.main'], function() {
          // Get request ID from URL or pass it from the server
          const requestFile = "{{ request.id }}.{{request.extension }}";
          let editor;
          
          // Determine the language based on MIME type
          let language = 'plaintext';
          const mimeType = "{{ request.mimeType }}";
          
          if (mimeType.includes('javascript') || mimeType.includes('js')) {
            language = 'javascript';
          } else if (mimeType.includes('html')) {
            language = 'html';
          } else if (mimeType.includes('css')) {
            language = 'css';
          } else if (mimeType.includes('json')) {
            language = 'json';
          } else if (mimeType.includes('xml')) {
            language = 'xml';
          }
          
          // Create the editor with initial empty content
          editor = monaco.editor.create(document.getElementById('monaco-editor-container'), {
            value: "Loading content...",
            language: language,
            theme: 'vs',
            readOnly: false,
            automaticLayout: true,
            minimap: {
              enabled: true
            },
            scrollBeyondLastLine: false,
          });
          
          // Fetch the content from the API endpoint
          fetch(`/responses/${requestFile}`)
            .then(response => {
              if (!response.ok) {
                throw new Error('Failed to load response content');
              }
              return response.text();
            })
            .then(responseContent => {
              // Update the editor with the fetched content
              editor.setValue(responseContent);
            })
            .catch(error => {
              console.error('Error loading response:', error);
              editor.setValue(`Error loading content: ${error.message}`);
            });
        });
      </script>
    </div>
    {% endif %}

    {% if request.jsAnalysis %}

    {% if request.jsAnalysis.imagesCount > 0 %}
    <div class="section">
      <h2>Discovered Images Gallery</h2>
      <div class="gallery">
        {% for image in request.jsAnalysis.images %}
        <div class="gallery-item">
            {% if image.type == "base64_image" %}
            <img
              src="{{ image.content }}"
              alt="Image from request" />
            {% else %}
             {{ image.content | safe }}
            {% endif %}
          <div class="image-caption"></div>
        </div>
        {% endfor %}
      </div>
    </div>
    {% endif %}

    <div class="section">
      <h2>Other Strings (by length)</h2>
      <table>
        <tr>
          <th>Literal</th>
        </tr>
        {% for literal in request.jsAnalysis.otherLiterals %}
        <tr>
          <td>
            <span>{{ literal | length }} characters</span>
            <pre>{{ literal }}</pre>
          </td>
        </tr>
        {% endfor %}
      </table>
    </div>
    {% endif %}


  </body>
</html>
